#include "50_Pow.h"
#include "math.h"
#include <algorithm>
#include <queue>
#include <stack>
#include <unordered_map>


/***********************************************************
 * 50  实现 pow(x, n) ，即计算 x 的 n 次幂函数
********************************************************************/

/******************************************************************
输入：x = 2.00000, n = 10
输出：1024.00000

----------------------------------------------

输入：x = 2.10000, n = 3
输出：9.26100

----------------------------------------------

输入：x = 2.00000, n = -2
输出：0.25000
解释：2-2 = 1/22 = 1/4 = 0.25
 *******************************************************************/
double Solution50::dfs(double x, int n){
    if(n==0){
        return 1.0;
    }

    double y = dfs(x, n/2);  // 得到它的根号

    return n%2 == 0 ? y*y : y*y*x;
}

double Solution50::myPow(double x, int n){
    double result = 0;

    result = dfs(x, std::abs(n));  // 这个函数的功能: 返回'根号x'乘以'根号x'的结果

    if(n < 0){
        result = 1.0/result;
    }

    return result;
}